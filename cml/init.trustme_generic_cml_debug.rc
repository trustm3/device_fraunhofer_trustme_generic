import /init.usb.rc

on early-init
    # Set init and its forked children's oom_adj.
    write /proc/1/oom_score_adj -1000

    # Set the security context of /adb_keys if present.
    restorecon /adb_keys

    start ueventd
    loglevel 3 # this *only* affects init, not ueventd etc.!

# create mountpoints
    mkdir /boot 0771 system system
    mkdir /mnt 0775 root system
    mkdir /opt
    symlink /data/trustme /opt/trustme

on init
    sysclktz 0
    #export PATH /bin:/sbin:

    export PATH /bin:/sbin:/system/bin:
    mkdir /system/bin 0755 root shell
    start busybox-symlinks
    chmod 0777 /sbin/ssh
    chmod 0777 /sbin/start-sshd

    # fix DNS without netd
    export ANDROID_DNS_MODE local

# Healthd can trigger a full boot from charger mode by signaling this
# property when the power button is held.
on property:sys.boot_from_charger_mode=1
    class_stop charger
    trigger late-init

# Load properties from /system/ + /factory after fs mount.
on load_system_props_action
    load_system_props

# Indicate to fw loaders that the relevant mounts are up.
on firmware_mounts_complete
    rm /dev/.booting

# Mount filesystems and start core system services.
on late-init
    trigger early-fs
    trigger fs
    trigger post-fs
    trigger post-fs-data

    # Load properties from /system/ + /factory after fs mount. Place
    # this in another action so that the load will be scheduled after the prior
    # issued fs triggers have completed.
    trigger load_system_props_action

    # Remove a file to wake up anything waiting for firmware.
    trigger firmware_mounts_complete

    trigger early-boot
    trigger boot

on post-fs
    start logd
    start cml-panic
    #symlink /ssh /root/.ssh
    # linking urandom to random will speed up ssh client
    # otherwise you will see following warning and wait for a long time
    # ssh: Warning: Reading the random source seems to have blocked.
    # If you experience problems, you probably need to find a better entropy source.
    #rm /dev/random
    #symlink /dev/urandom /dev/random
    # crash dump location
    mkdir /data/core
    write /proc/sys/kernel/core_pattern /data/core/%e.%p

    # We restorecon /data in case the userdata partition has been reset.
    restorecon_recursive /data


on boot
   ifup lo
   hostname localhost
   start adbd

# start scd first and check for certificates/provisioning mode, then set property to start cml
on post-fs-data
   restorecon /data
   start trustme-cml-scd

on property:trustme.provisioning.mode=no
   start trustme-cml-cmld

## Daemon processes to be run by init.
##
service ueventd /sbin/ueventd
   seclabel u:r:ueventd:s0

# adbd is controlled via property triggers in init.<platform>.usb.rc
service adbd /sbin/adbd --root_seclabel=u:r:su:s0
    class core
    socket adbd stream 660 system system
    disabled
    seclabel u:r:adbd:s0

service busybox-symlinks /sbin/busybox-android --install /system/bin
   seclabel u:r:init:s0
   oneshot

service trustme-cml-cmld /sbin/cml-daemon
   seclabel u:r:init:s0

service trustme-cml-scd /sbin/cml-scd
   seclabel u:r:init:s0

service cml-panic /sbin/cml-panic
   seclabel u:r:init:s0
   oneshot
